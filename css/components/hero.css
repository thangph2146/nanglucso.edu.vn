/* Hero Styles from index.html */
.hero-section {
    position: relative;
    min-height: 90vh; /* Slightly increased height */
    background: var(--gradient-hero, linear-gradient(135deg, rgba(2, 80, 158, 0.95), rgba(7, 74, 145, 0.9))); /* Use variable */
    background-size: cover;
    background-position: center center;
    color: var(--text-light);
    overflow: hidden;
    display: flex; /* For vertical centering of content */
    align-items: center; /* For vertical centering of content */
}

.hero-bg-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--gradient-overlay, linear-gradient(135deg, rgba(0, 46, 93, 0.8) 0%, rgba(0, 22, 45, 0.95) 100%)); /* Use variable */
    z-index: 1;
    opacity: 0.85; /* Slightly more transparent */
}

.hero-section .container {
    position: relative;
    z-index: 2;
}

.hero-section .hero-content {
    padding: 1rem 0; 
}

.fade-in-up, .fade-in-left {
    opacity: 1 !important; /* These might conflict with JS animations, ensure they are intended */
    transform: none !important; /* These might conflict with JS animations, ensure they are intended */
    /* transition: all 0.5s ease; */ /* Consider if JS handles this transition */
}

.hero-title {
    font-size: var(--font-size-hero, 3.25rem); /* Use variable, slightly larger */
    font-weight: 800; /* Bolder */
    margin-bottom: var(--spacing-md, 1.5rem);
    line-height: 1.25;
    color: var(--text-light);
    text-shadow: 1px 1px 3px rgba(0,0,0,0.2);
}

.hero-title span {
    color: var(--color-gold-light);
    position: relative;
}

.hero-subtitle {
    font-size: var(--font-size-lg, 1.25rem);
    color: var(--color-gold-light);
    margin-bottom: var(--spacing-sm, 1rem);
    font-weight: 600;
    letter-spacing: 0.5px;
}

.hero-text {
    font-size: var(--font-size-md, 1.125rem);
    margin-bottom: var(--spacing-lg, 2rem);
    max-width: 600px; /* Constrain width for readability */
    line-height: 1.7;
    color: rgba(255,255,255,0.85);
}

.hero-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    margin-bottom: 2rem;
}



.stats-counter {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-md, 20px);
    margin-top: var(--spacing-lg, 1.5rem);
}

.stat-item {
    flex: 1;
    min-width: 120px; /* Slightly wider */
    background-color: rgba(255, 255, 255, 0.08);
    padding: var(--spacing-sm) var(--spacing-xs);
    border-radius: var(--border-radius-md);
    text-align: center;
    transition: var(--transition-base);
    border: 1px solid rgba(255,255,255,0.1);
}

.stat-item:hover {
    background-color: rgba(255, 255, 255, 0.15);
    transform: translateY(-5px) scale(1.03);
    border-color: rgba(255,255,255,0.2);
}

.stat-number {
    font-size: var(--font-size-xl, 1.75rem);
    font-weight: 700;
    margin-bottom: var(--spacing-xs, 5px);
    color: var(--color-gold-light);
}

.stat-text {
    font-size: var(--font-size-xs, 0.85rem);
    color: rgba(255, 255, 255, 0.85);
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.hero-image {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
}

.hero-image img {
    max-width: 100%;
    height: auto;
    max-height: 450px; /* Slightly larger */
    border-radius: var(--border-radius-lg);
    /* box-shadow: 0 10px 30px rgba(0,0,0,0.2); */
}

/* Responsive Styles for Hero Section */
@media (max-width: 991.98px) {
    .hero-section {
        padding: 0px;
        min-height: auto; /* Adjust height for smaller screens */
        text-align: center; /* Center content on smaller screens */
    }
    
    .hero-title {
        font-size: var(--font-size-xxl, 2.5rem);
    }
    
    .hero-subtitle {
        font-size: var(--font-size-lg, 1.15rem);
    }
    
    .hero-text {
        font-size: var(--font-size-base, 1rem);
        max-width: 90%;
        margin-left: auto;
        margin-right: auto;
    }
    .hero-buttons {
        justify-content: center;
    }
    .stats-counter {
        justify-content: center;
        gap: var(--spacing-sm);
    }
    
    .stat-item {
        min-width: 100px;
        padding: var(--spacing-sm) var(--spacing-xs);
    }
    .hero-image {
        margin-top: var(--spacing-lg);
    }
    .hero-image img {
        max-height: 350px;
    }
}

@media (max-width: 767.98px) {
    .hero-section {
        padding: 0px;
    }
    .hero-title {
        font-size: var(--font-size-xl, 2rem);
    }
    
    .hero-subtitle {
        font-size: var(--font-size-md, 1rem);
    }
    .hero-text {
        font-size: var(--font-size-sm, 0.9rem);
    }
    .hero-buttons .btn {
        width: 100%;
        margin-bottom: var(--spacing-xs);
    }
    .hero-buttons .btn:last-child {
        margin-bottom: 0;
    }
    .stat-item {
        min-width: calc(50% - var(--spacing-sm));
        padding: var(--spacing-xs);
    }
    .stat-number {
        font-size: var(--font-size-lg);
    }
    .stat-text {
        font-size: 0.75rem;
    }
    .hero-image img {
        max-height: 300px;
    }
}

/* Keyframe animations if not already defined elsewhere */
@keyframes fadeInUpGeneral {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fadeInRightGeneral {
    from {
        opacity: 0;
        transform: translateX(20px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

/* Hero Styles adapted for Bootstrap Carousel */
.hero-section.carousel {
    position: relative;
    overflow: hidden;
    min-height: 90vh; /* Keep min-height on the main section */
    color: var(--text-light);
}

.carousel-item {
    min-height: 90vh; /* Match section height */
    background: var(--gradient-hero, linear-gradient(135deg, rgba(2, 80, 158, 0.95), rgba(7, 74, 145, 0.9))); /* Moved from .hero-section */
    background-size: cover;
    background-position: center center;
    transition: transform .6s ease-in-out; /* Default BS transition */
    position: relative; /* Needed for overlay positioning if overlay is inside this wrapper too */
}

.carousel-item-content-wrapper {
    display: flex;
    align-items: center;
    justify-content: center; /* Optional: if you want to center .container horizontally too */
    width: 100%;
    min-height: inherit; /* Inherit min-height from .carousel-item */
    padding: 60px 0; /* Add back some padding, adjust as needed */
    position: relative; /* If .hero-bg-overlay is moved inside this */
}

.hero-section .container {
    position: relative;
    z-index: 2;
    width: 100%; /* Ensure container takes full width within item */
}

.hero-section .hero-content {
    padding: 1rem 0; 
}

.fade-in-up, .fade-in-left {
    opacity: 1 !important; 
    transform: none !important; 
}

.hero-image {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
}

/* Carousel Controls Styling */
.carousel-indicators {
    bottom: 30px; /* Adjust position */
}

.carousel-indicators [data-bs-target] {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.5);
    border: 1px solid transparent;
    opacity: 0.7;
    transition: opacity .6s ease;
}

.carousel-indicators .active {
    background-color: var(--color-red, #DC3545);
    opacity: 1;
}

.carousel-control-prev, 
.carousel-control-next {
    width: 5%; /* Smaller control area */
    opacity: 0.7;
    transition: opacity 0.2s ease;
}

.carousel-control-prev:hover, 
.carousel-control-next:hover {
    opacity: 1;
}

.carousel-control-prev-icon, 
.carousel-control-next-icon {
    background-size: 60%; /* Slightly smaller icon */
    background-color: rgba(0, 0, 0, 0.3); /* Darker background for better visibility */
    border-radius: 50%;
    padding: 1rem; /* Add padding to make the background circular */
}

/* Comment out old keyframes if no longer needed */
/* 
@keyframes fadeInUpGeneral {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fadeInRightGeneral {
    from {
        opacity: 0;
        transform: translateX(50px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}
*/